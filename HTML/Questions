1. What are web workers?
   Web workers at long last bring multi-threading to JavaScript.
   A web worker is a script that runs in the background (i.e., in another thread) without the page needing to wait for it to complete. The user can continue to interact with the page while the web worker runs in the background. Workers utilize thread-like message passing to achieve parallelism.

2. Explain localStorage and sessionStorage.
https://www.geeksforgeeks.org/difference-between-local-storage-session-storage-and-cookies/
   The difference between localStorage and sessionStorage involves the lifetime and scope of the storage.

Data stored through localStorage is permanent: it does not expire and remains stored on the user’s computer until a web app deletes it or the user asks the browser to delete it. SessionStorage has the same lifetime as the top-level window or browser tab in which the script that stored it is running. When the window or tab is permanently closed, any data stored through sessionStorage is deleted.

Both forms of storage are scoped to the document origin so that documents with different origins will never share the stored objects. But sessionStorage is also scoped on a per-window basis. If a user has two browser tabs displaying documents from the same origin, those two tabs have separate sessionStorage data: the scripts running in one tab cannot read or overwrite the data written by scripts in the other tab, even if both tabs are visiting exactly the same page and are running exactly the same scripts.

// LocalStorage:
Size: 5 MB per domain.

localStorage.setItem("Key001","India");
localStorage.getItem("Key001");
localStorage.removeItem("Key001");

all domains cannot access data in the localStorage. The localStorage object is part of the Web Storage API provided by web browsers to store data locally within the user's browser. Each origin (combination of protocol, domain, and port) has its own separate storage area for localStorage. This means that data stored in localStorage by one domain cannot be accessed by another domain, even if they are accessing the same browser.

This is an important security feature called the Same-Origin Policy, which restricts how documents or scripts loaded from one origin can interact with resources from another origin. It helps prevent malicious websites from accessing sensitive data stored by other websites.

So, while data stored in localStorage is persistent within the browser for a specific domain, it cannot be accessed by other domains due to the security restrictions imposed by the Same-Origin Policy.

3. What is the difference between span and div?
   The difference is that span gives the output with display: inline and div gives the output with display: block.
   span is used when we need our elements to be shown in a line, one after the other.

4. What is the Geolocation API in HTML5?

5. What’s one main result if you do not specify a doctype in an HTML page?
   Browser will not be able to identify that it’s a HTML document and HTML 5 tags will not interpreted by the browser.

6. What is SVG?
   SVG stands for scalable vector graphics. It’s a text based graphic language which draws images using text, lines, dots etc. This makes it lightweight and renders faster.

7. What is canvas in HTML 5?
   Canvas is an HTML area on which you can draw graphics.

8. What are selectors in CSS?
   Selectors help to select an element to which you want to apply a style. e.g. using #id and .class

9. Can you explain CSS box model?
   CSS box model is a rectangular space around a HTML element which defines border, padding and margin.
   Border: - This defines the maximum area in which the element will be contained. We can make the border visible, invisible, define height and width etc.
   Padding: - spacing between border and element.
   Margin: - spacing between border and any neighboring elements.

10. How would you automatically transfer your visitors to a new web page?

- You can do it with the help of meta tag mentioned below:
<META HTTP-EQUIV="Refresh" CONTENT="2"; URL="http://www.yourname.com">

11. Explain Cell Padding and Cell Spacing.

- Cell Padding : It refers to the gap or space between the cell content and cell border or cell wall.
- Cell Spacing : It refers to the gap between the two cells of same tables.

12. How many types CSS can be include in HTML?
    There are three ways to include the CSS with HTML:

        1) Inline CSS : It is used when only small context is to be styled.
        - To use inline styles add the style attribute in the relevant tag.
        2) External Style Sheet : Is used when the style is applied to many pages.
        - Each page must link to the style sheet using the <link> tag. The <link> tag goes inside the head section:
        <head>
        <link rel="stylesheet" type="text/css" href="mystyle.css" />
        </head>
        3) Internal Style Sheet : Is used when a single document has a unique style.
        - Internal styles sheet needs to put in the head section of an HTML page, by using the <style> tag, like this:
        <head>
        <style type="text/css">
        hr {color:sienna}
        p {margin-left:20px}
        body {background-image:url("images/back40.gif")}
        </style>
        </head>

13. What is progressive rendering?
    Progressive rendering is the name given to techniques used to improve the performance of a webpage to render content for display as quickly as possible.

14. Why you would use a srcset attribute in an image tag? Explain the process the browser uses when evaluating the content of this attribute.
    You would use the srcset attribute when you want to serve different images to users depending on their device display width.

15. What is the difference among inline, inline-block, and block elements?
    Block Element: Block elements always start on a new line and occupy an entire row or width. Examples of block elements are <div> and <p>.

    Inline Elements: Inline elements do not start on a new line; they appear on the same line as the content and tags beside them. Some examples of inline elements are <a>, <strong>, <span>, and <img>.

    Inline-block Elements: Inline-block elements are similar to inline elements, but they can have padding, margins, and set height and width values.
